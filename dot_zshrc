# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 1

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

export EDITOR='nvim'

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# =========================================================
#  Modern, Robust, and Performant Zsh Configuration
# ---------------------------------------------------------
#  * Uses fzf, fd, ripgrep (rg), bat, eza, pure prompt
#  * Fine‑tuned history, keybindings, aliases, and helpers
#  * Extensive comments for future maintenance
# =========================================================

# ------------------------------------------------------------------
# 1️⃣  Basic Zsh Options & History
# ------------------------------------------------------------------
setopt autocd                  # `cd dir` → `cd dir`
setopt correct                 # Auto‑correct mistyped commands
setopt histignoredups          # Do not store duplicate history lines
setopt sharehistory            # Share history live between all shells
setopt pushdminus              # `cd -` behaves like in bash
setopt pushdtohome             # `cd` with no args goes to $HOME
setopt histreduceblanks        # Trim extra spaces in history entries
setopt extendedhistory         # Store timestamps & command duration
setopt extendedglob            # Adds vi‑style globbing
setopt nomatch                 # Turns off the “no glob match error”
setopt notify                  # Enables asynchronous‑job notifications

# History file configuration
HISTFILE=~/.zsh_history
HISTSIZE=50000
SAVEHIST=50000

unsetopt beep


# ------------------------------------------------------------------
# 2️⃣  Prompt – Pure (fallback to default if missing)
# ------------------------------------------------------------------
# Pure is a fast, minimal prompt that shows git status, virtualenvs, etc.
# If you do not have it installed, we fall back to the standard prompt.
autoload -Uz promptinit
promptinit
prompt pure || prompt default



# ------------------------------------------------------------------
# 3️⃣  Aliases – Modern replacements & safety aliases
# ------------------------------------------------------------------
# Keep the original grep handy (if you need classic behaviour)
alias grep_orig='grep'              # classic grep
alias grep='rg --smart-case'        # default to ripgrep
alias cat='bat --paging=never --style=plain'  # colourized `cat`
alias ls='eza --color=auto -F'     # modern ls (eza) with colour & classification
alias ..='cd ..'
alias ...='cd ../..'

# Helper: grep for processes (uses ripgrep under the hood)
alias psg='ps aux | rg'             # use `rg` after aliasing grep



# ------------------------------------------------------------------
# 4️⃣  fzf, fd, bat, eza – Default settings & keybindings
# ------------------------------------------------------------------
# Guard against missing tools – silently skip configuration if not found
if command -v fd >/dev/null 2>&1; then
  # Default command that fzf runs when you hit Ctrl‑T
  export FZF_DEFAULT_COMMAND="fd --type file --hidden --follow --exclude .git"
fi

# Preview is now unconditional: show bat output for files, short `eza` for dirs
export FZF_DEFAULT_OPTS="
  --height 50% --layout reverse --border
  --preview-window 'up:40%:wrap'
  --preview '
    if [[ -d {} ]]; then
      eza --long --git --ignore-glob=.git --no-user --no-time {} | head -40
    else
      bat --style=numbers --color=always {}
    fi
  '
"

# Source fzf keybindings if the script exists
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh



# ------------------------------
# git aliases
# ------------------------------

# Keep the default editor for Git
export GIT_EDITOR=nvim

# Quick‑fire helpers
alias gst='git status'
alias gco='git checkout'
alias gcm='git commit'
alias gaa='git add --all'
alias gcp='git cherry-pick'
alias gpr='git pull --rebase'
alias gpb='git push -u origin HEAD'
alias glog='git log --oneline --graph --decorate --all'
alias gpl='git pull'
alias gpup='git push'

# One‑liner wrappers (as *functions* for flexibility)
function gca() { git commit -a -m "$@"; }     # commit all & supply a message
function gcl() { git clone --recursive "$@"; }
function gsf() { git show -s --format=fuller "$@"; }
function glr() { git rebase -i HEAD~"$1"; }   # e.g. glr 3 → rebase last 3 commits
function gbf() { git branch -D "$@"; }
function gss() { git status -s; }
function gk()    { git checkout -; }
function gup()   { git remote update && git status; }

# Branch naming convention
alias gb='git branch'
alias gbd='git branch -d'
alias gbdm='git branch -d --merged'

# Convenience helpers
alias gbr='git branch --remote --merged | grep -v "\\*"'  # note the escaped * for zsh
alias gbl='git branch -a'
alias gch='git checkout -b'
alias gbu='git branch --set-upstream-to=origin/$(git rev-parse --abbrev-ref HEAD)'
alias gbal='git fetch --all && git pull --prune'
alias gpushf='git push --force-with-lease'
alias gs='git stash push -m'
alias gls='git ls-files'

# Squash‑and‑push one‑liner
alias gsq='git reset --soft HEAD~1 && git commit -m'

# Re‑base onto main (or master)
alias grb='git rebase main'

# For more advanced behaviour (like “--force‑with‑lease” automatically using the current branch)
function gpushf() { git push --force-with-lease "$@"; }

